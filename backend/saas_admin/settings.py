# """
# Django settings for saas_admin project.
#
# Generated by 'django-admin startproject' using Django 5.1.1.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """
import os
from datetime import timedelta
from dotenv import load_dotenv
from pathlib import Path
import configparser
from dj_database_url import parse as db_url
from decouple import config, Csv

load_dotenv(dotenv_path=".env")

BASE_DIR = Path(__file__).resolve().parent.parent

# SECRET_KEY = os.getenv("SECRET_KEY")
SECRET_KEY = config("SECRET_KEY", default="", cast=str)

# cloudflare settings
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')




# ALLOWED_HOSTS = ["*",'localhost', '127.0.0.1',"healthsrx.com","www.healthsrx.com","https://healthsrx.com","https://www.healthsrx.com"]
ALLOWED_HOSTS = config("ALLOWED_HOSTS", default="", cast=Csv())


# DEBUG = os.getenv("DEBUG")
DEBUG = config("DEBUG", default=False, cast=bool)

# Application definition

SHARED_APPS = [
    "django.contrib.auth",
    "daphne",
    "django_tenants",
    "django_elasticsearch_dsl",
    "search",
    "users",
    "corsheaders",
    "django.contrib.admin",
   
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    'rest_framework_simplejwt',
    "drf_yasg",
    "notifications",
    "channels",
    "website",
    "ckeditor",
    "ckeditor_uploader",
    'notice_services',
]

TENANT_APPS = [
    "clients",  
    "patients",
    'accounting',
    'appointments_list',
    'bed_management',
    'billing_counter',
    'blood_bank',
    'certificate_module',
    'dashboard',
    'departments',
    'ipd_module',
    'notifications',
    'opd_module',
    'pathology_module',
    'pharmacy_module',
    'radiology_module',
    'staff_management',
    'reports',
    'settings',
    'surgery_module',
    'services',
    'cms',
    'research_module',
    'mail_box',
    'visitor_management',
]

INSTALLED_APPS = SHARED_APPS + [app for app in TENANT_APPS if app not in SHARED_APPS]


MIDDLEWARE = [
    "django_tenants.middleware.main.TenantMainMiddleware",  
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "saas_admin.urls"

WSGI_APPLICATION = "saas_admin.wsgi.application"
ASGI_APPLICATION = "saas_admin.asgi.application"

# DATABASES = {
#     "default": {
#         "ENGINE": "django_tenants.postgresql_backend",
        
#         # Local
#         # "NAME": os.getenv("DATABASE_NAME"),
#         # "USER": os.getenv("DATABASE_USER"),
#         # "PASSWORD": os.getenv("DATABASE_PASSWORD"), 
#         # "HOST": os.getenv("DATABASE_HOST"),
#         # "PORT": os.getenv("DATABASE_PORT"),  
        
#         'ATOMIC_REQUESTS': True 
        
#     }
# }


DATABASES = {
    "default": config(
        "DATABASE_URL",
        default="postgres://postgres:postgres@127.0.0.1:5432/healthrxuser",
        cast=db_url,
    )
}

# Override engine to support django-tenants
DATABASES["default"]["ENGINE"] = "django_tenants.postgresql_backend"

# Optional: Enable atomic requests
DATABASES["default"]["ATOMIC_REQUESTS"] = True


# Email settings
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = os.getenv("EMAIL_HOST", "smtp.gmail.com")
# EMAIL_PORT = int(os.getenv("EMAIL_PORT", 587))
# EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER", "mail@healthrx.com")
# EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD", "Healthrx@#2025")
# EMAIL_USE_TLS = True
# EMAIL_USE_SSL = False
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER



# OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")


# Domain work

import os

CLOUDFLARE_ZONE_ID = os.getenv("CF_ZONE_ID", "3ee4aa14b9101e085448e270a4cb7778")
CLOUDFLARE_API_TOKEN = os.getenv("CF_API_TOKEN", "_DllvFzkgB0xbGUAAVN8sVgBjfJPcKV59W7ATUVw")


INSTALLED_APPS += ["django_hosts"]
ROOT_HOSTCONF = 'saas_admin.hosts'
DEFAULT_HOST = 'www'
PARENT_HOST = 'healthsrx.com'

DATABASE_ROUTERS = ("django_tenants.routers.TenantSyncRouter",)

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

AUTH_USER_MODEL = "users.CustomUser"
AUTHENTICATION_BACKENDS = [
    "users.auth_backends.TenantEmailBackend", 
    "django.contrib.auth.backends.ModelBackend", 
    
    ]
SILENCED_SYSTEM_CHECKS = ["auth.W004"]


DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# JWT Authentication
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",
}

# Tenant Model Settings
TENANT_MODEL = "users.Tenant"
TENANT_DOMAIN_MODEL = "users.Domain"
PUBLIC_SCHEMA_URLCONF = "users.urls"
LOGIN_URL = "/login"

# to set the session here...
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_NAME = 'sessionid'
SESSION_COOKIE_AGE = 60*60*24  # One day in seconds


STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]



MEDIA_URL = '/media/'
MEDIA_ROOT = '/opt/myproject/myproject/media/'
DOCUMENTS_PATH = "/opt/myproject/myproject/media"


# Environment-aware media root configuration
# if DEBUG:
#     # Development: Use local media directory
#     MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#     DOCUMENTS_PATH = os.path.join(BASE_DIR, 'media')
# else:
#     # Production: Use configured media path or default to local
#     MEDIA_ROOT = '/opt/myproject/myproject/media/'
#     DOCUMENTS_PATH = "/opt/myproject/myproject/media"


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

CSRF_TRUSTED_ORIGINS = [
    "https://healthsrx.com",
    "https://www.healthsrx.com",
]


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, "debug.log"),
            "formatter": "verbose",
        },
        
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "clients": {
            "handlers": ["file", "console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
}


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(os.getenv("REDIS_HOST"), 6379)],
        },
    },
}

ELASTICSEARCH_DSL = {
    "default": {
        "hosts": f"http://{os.getenv('ELASTIC_SEARCH_HOST')}:9200",
    }
}

# CKEditor Configuration
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Full',
        'height': 300,
        'width': '100%',
        'extraPlugins': ','.join([
            'uploadimage',
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    },
    'cms': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source'],
            ['Image', 'Table'],
            ['Styles', 'Format', 'Font', 'FontSize'],
            ['TextColor', 'BGColor'],
        ],
        'height': 400,
        'width': '100%',
        'filebrowserWindowWidth': 940,
        'filebrowserWindowHeight': 725,
    }
}
